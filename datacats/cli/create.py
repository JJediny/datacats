from string import uppercase, lowercase, digits
from random import SystemRandom
from os.path import abspath, split as path_split, expanduser, isdir
from os import makedirs

from datacats.docker import docker
from datacats.validate import valid_name

def generate_db_password():
    """
    Return a 16-character alphanumeric random string generated by the
    operating system's secure pseudo random number generator
    """
    chars = uppercase + lowercase + digits
    return ''.join(SystemRandom().choice(chars) for x in xrange(16))

def main(opts):
    workdir, name = path_split(abspath(opts['PROJECT']))

    if not valid_name(name):
        print 'Project name must consist of only lowercase letters and digits,'
        print 'must start with a letter and must be at least 5 characters long.'
        return

    if not isdir(workdir):
        print 'Parent directory for project does not exist!'
        return

    datadir = expanduser('~/.datacats/' + name)
    target = workdir + '/' + name

    postgres_password = generate_db_password()
    datastore_ro_password = generate_db_password()
    datastore_rw_password = generate_db_password()

    print '[1/3] Creating project "{0}"'.format(name)
    makedirs(datadir + '/venv', mode=0700)
    makedirs(datadir + '/search', mode=0700)
    makedirs(datadir + '/data', mode=0700)
    makedirs(datadir + '/files', mode=0700)
    makedirs(target + '/ini')
    makedirs(target + '/src')

    vols = {
        datadir + '/venv': {'bind': '/usr/lib/ckan_target', 'ro': False},
        target + '/src': {'bind': '/project/src_target', 'ro': False},
        target + '/ini': {'bind': '/etc/ckan/default', 'ro': False},
    }
    c = docker.create_container(
        image='datacats/web:preload_master', # FIXME: only master for now
        environment={'BRANCH': 'master'}, # FIXME
        command='init_project.sh',
        volumes=[v['bind'] for v in vols.itervalues()],
        detach=False)
    docker.start(
        container=c['Id'],
        binds=vols)
